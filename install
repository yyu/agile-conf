#!/usr/bin/env python3

import os
import urllib.request
import subprocess


def make_full_path(path: str) -> str:
    return os.path.expanduser(path)


def make_dir_as_needed(path: str) -> None:
    folder = os.path.dirname(path)
    os.makedirs(folder, exist_ok=True)


def shell_run(cmd: str) -> None:
    subprocess.check_call(cmd, shell=True)


def add_to_bashrc(rc_path: str) -> None:
    shell_run('echo >> ~/.bashrc')
    shell_run('echo "# added by my-bash/install" >> ~/.bashrc')
    shell_run('echo ". %s" >> ~/.bashrc' % rc_path)


class Rc:
    def __init__(self, local_path: str, url: str,
                 post_download_func=lambda rc_path: print('no post-download procedure')):
        self.local_path = local_path
        self.local_full_path = make_full_path(local_path)
        self.url = url
        self.post_download = post_download_func

    def download(self) -> None:
        make_dir_as_needed(self.local_full_path)

        with open(self.local_full_path, 'wt') as f:
            response = urllib.request.urlopen(self.url)
            f.write(response.read().decode())

    def install(self) -> None:
        print('%s <== %s' % (self.local_full_path, self.url))
        self.download()
        self.post_download(self.local_path)


if __name__ == '__main__':
    install_folder = '~/.my-bash'
    url_prefix = 'https://raw.githubusercontent.com/yyu/my-bash/master'

    rc_list = [
        Rc(f'{install_folder}/.termcolors.rc',  f'{url_prefix}/termcolors.rc', add_to_bashrc)
    ]

    for rc in rc_list:
        rc.install()
